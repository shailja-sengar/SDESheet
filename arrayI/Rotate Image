#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

//brute force: tc:O(n*n), sc:O(n*n)
/*vector<vector<int>>rotateMatrix(vector<vector<int>>&matrix){
    int n = matrix.size();
    vector<vector<int>>rotate(n, vector<int>(n));
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            rotate[j][n-i-1] = matrix[i][j];
        }
    }
    return rotate;
}*/

//optimal: tc:o(n*n) + O(n*n), sc:O(1)
void rotateMatrix(vector<vector<int>>&matrix){
    int n = matrix.size();
    for(int i=0; i<n;i++){
        for(int j=0; j<i; j++){
            int temp = matrix[i][j];
            matrix[i][j] = matrix[j][i];
            matrix[j][i] = temp;
            //swap(matrix[i][j], matrix[j][i]);
        }
    }
    
    //reverse each row
    for(int i=0; i<n; i++){
        reverse(matrix[i].begin(), matrix[i].end());
    }
    
}
int main(){
    int n=3, m=3;
    vector<vector<int>>matrix(n, vector<int>(m));
    matrix = {{1,2,3},{4,5,6}, {7,8,9}};
    //vector<vector<int>>rotated = rotateMatrix(matrix);
    rotateMatrix(matrix);
    cout<<"After rotating the matrix: "<<endl;
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            cout<<matrix[i][j]<<" ";
        }
        cout<<endl;
    }
}
