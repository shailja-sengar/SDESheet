/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

//brute force: tc:o(n^3), sc:O(3*k)
/*vector<vector<int>>threeSum(vector<int>&nums){
    vector<vector<int>>ans;
    int n = nums.size();
    vector<int>temp;
    for(int i=0; i<n; i++){
        for(int j=i+1; j<n; j++){
            for(int k=j+1; k<n; k++){
                temp.clear();
                int sum = nums[i] + nums[j] + nums[k];
                if(sum == 0){
                    temp.push_back(nums[i]);
                    temp.push_back(nums[j]);
                    temp.push_back(nums[k]);
                }
                if(temp.size() != 0)
                    ans.push_back(temp);
            }
        }
    }
    return ans;
}*/

//optimal: sorting+2pointer, tc:(n^2), sc:O(3*k)
vector<vector<int>>threeSum(vector<int>&nums){
    sort(nums.begin(), nums.end());
    int n = nums.size();
    vector<vector<int>>ans;
    int sum, sum2;
    for(int i=0; i<n-2; i++){
        
        if(i==0 || (i>0 && nums[i] != nums[i-1])){
            
             int j=i+1, k=n-1;
            sum = 0 - nums[i];
        while(j < k){
            sum2 = nums[j] + nums[k];
           if(sum2 == sum){
                vector<int>temp;
                temp.push_back(nums[i]);
                temp.push_back(nums[j]);
                temp.push_back(nums[k]);
                ans.push_back(temp);
                
                while(j<k && nums[j] == nums[j+1]) j++;
                while(j<k && nums[k] == nums[k-1]) k--;
                
                j++;
                k--;
            }
            else if(sum2 > sum) k--;
            else  j++;
        }
        }
       
    }
    return ans;
}
int main()
{
    vector<int>nums = {-1,0,1,2,-1,-4};
    vector<vector<int>>ans = threeSum(nums);
    
    for(int i=0; i<ans.size(); i++){
        for(int j=0; j<ans[i].size(); j++){
            cout<<ans[i][j]<<" ";
        }
        cout<<endl;
    }

    return 0;
}
