#include <iostream>
#include<vector>
#include<unordered_set>
using namespace std;

//brute force: tc:O(nlogn)+O(n), sc:O(n)
/*int removeDuplicate(vector<int>&nums){
    unordered_set<int>st;
    for(int i=0; i<nums.size(); i++){
        st.insert(nums[i]);
    }
    int k = st.size();
    int j=0;
    for(int x : st){
        nums[j] = x;
        j++;
    }
    return k;
}*/

//optimal: tc:O(n), sc:O(1)
int removeDuplicate(vector<int>&nums){
    int n = nums.size();
    int i=0, j=1;
    
    while(j < n){
        if(nums[i] != nums[j]){
            i++;
            nums[i] = nums[j];
        }
        j++;
    }
    return i+1;
}
int main()
{
    vector<int>nums = {1,1,2,2,2,3,3};
    
    int k = removeDuplicate(nums);
    cout<<k<<endl;
    for(int i=0; i<k; i++){
        cout<<nums[i]<<" ";
    }

    return 0;
}
