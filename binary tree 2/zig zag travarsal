
#include <iostream>
#include<queue>
using namespace std;

struct node{
    int data;
    node* right, *left;
};

node* newNode(int data){
    node* temp = new node;
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

//tc:O(n) sc:O(n)
vector<vector<int>>zigzagOrder(node* root){
    vector<vector<int>>ans;
    queue<node*>q;
    
    q.push(root);
    bool leftToRight = true;
    while(!q.empty()){
        int size = q.size();
        vector<int>level(size);
        
        for(int i=0; i<size; i++){
            node* temp = q.front();
            q.pop();
            
            int index = (leftToRight) ? i : (size - 1 - i);
                
            level[index] = temp->data;
            
            if(temp->left){
                q.push(temp->left);
            }
            if(temp->right)
                q.push(temp->right);
        }
        
        leftToRight = !leftToRight;
        ans.push_back(level);
    }
    return ans;
}
int main()
{
    node * root = newNode(3);
  root -> left = newNode(9);
  root -> right = newNode(20);
  root -> right -> left = newNode(15);
  root -> right -> right = newNode(7);
  vector<vector<int>>ans;
    
    ans = zigzagOrder(root);
    
    for(int i=0; i<ans.size(); i++){
        for(int j=0; j<ans[i].size(); j++){
            cout<<ans[i][j]<<" ";
        }
    }
    
    return 0;
}
