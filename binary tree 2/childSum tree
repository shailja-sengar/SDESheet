
#include <iostream>
using namespace std;

struct node{
    int data;
    node* right, *left;
};

node* newNode(int data){
    node* temp = new node;
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

void childSumTree(node* root){
    if(root==NULL)
        return ;
        
    int childSum = 0;
    
    if(root->left)
        childSum += root->left->data;
        
    if(root->right)
        childSum +=root->right->data;
        
    if(childSum < root->data){
        if(root->left) root->left->data = root->data;
        if(root->right) root->right->data = root->data;
    }
    
    childSumTree(root->left);
    childSumTree(root->right);
    
    int totSum = 0;
    if(root->left) totSum += root->left->data;
    if(root->right) totSum += root->right->data;
    if(root->left || root->right) root->data = totSum;
}

void preOrder(node* root){
    if(root == NULL)
        return ;
        
    cout<<root->data<<" ";
    preOrder(root->left);
    preOrder(root->right);
}
int main()
{
   node* root = newNode(40);
   root->left = newNode(20);
   root->right = newNode(10);
   root->left->left = newNode(15);
   root->left->right = newNode(31);
   root->right->left = newNode(2);
   root->right->right = newNode(4);
   
   childSumTree(root);
   preOrder(root);
    return 0;
}
