
#include <iostream>
#include<queue>
using namespace std;

struct node{
    int data;
    node* right, *left;
};

node* newNode(int data){
    node* temp = new node;
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

//tc:O(n), sc:O(n)
vector<int>levelOrder(node* root){
    vector<int> ans; 
        
        if(root == NULL) 
            return ans; 
            
        queue<node*> q; 
        q.push(root); 
        
        while(!q.empty()) {
           
            node *temp = q.front(); 
            q.pop(); 
            
            if(temp->left != NULL) 
                q.push(temp->left); 
            if(temp->right != NULL) 
                q.push(temp->right); 
                
            ans.push_back(temp->data); 
        }
        return ans; 
}
int main()
{
    node* root = newNode(1);
    root->left = newNode(7);
    root->left->left = newNode(9);
    root->left->right = newNode(2);
    root->left->left->left = newNode(11);
    root->left->left->right = newNode(10);
    root->left->right->left = newNode(9);
    root->left->right->right = newNode(6);
    
    root->right = newNode(10);
    root->right->left = newNode(2);
    root->right->right = newNode(7);
    root->right->left->left = newNode(1);
    root->right->left->right = newNode(7);
    root->right->right->left = newNode(6);
    root->right->right->right = newNode(10);
    
    vector<int>ans;
    ans = levelOrder(root);
    
    for(int i=0; i<ans.size(); i++){
        cout<<ans[i]<<" ";
    }
    return 0;
}
