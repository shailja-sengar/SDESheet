
#include <iostream>
#include<climits>
#include<vector>
#include<map>
using namespace std;

struct node{
    int data;
    node* right, *left;
};

node* newNode(int data){
    node* temp = new node;
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}

//using recursion, tc:O(n), sc:O(n)
void mirrorTree(node* root){
    if(root == NULL)
        return;
        
    node* temp;
    
    mirrorTree(root->left);
    mirrorTree(root->right);
    
    temp = root->left;
    root->left = root->right;
    root->right = temp;
}

void inOrder(node* root)
{
    if (root == NULL)
        return;
 cout << root->data << " ";
    inOrder(root->left);
    
    inOrder(root->right);
}

int main()
{
  node * root = newNode(1);
  root -> left = newNode(2);
  root -> left -> left = newNode(3);
  root -> left -> right = newNode(4);
  root -> right = newNode(2);
  root -> right -> left = newNode(4);
  root -> right -> right = newNode(3);
  
  mirrorTree(root);
  inOrder(root);
    return 0;
}
